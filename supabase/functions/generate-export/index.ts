import "https://deno.land/x/xhr@0.1.0/mod.ts";
import { serve } from "https://deno.land/std@0.168.0/http/server.ts";

const corsHeaders = {
  'Access-Control-Allow-Origin': '*',
  'Access-Control-Allow-Headers': 'authorization, x-client-info, apikey, content-type',
};

serve(async (req) => {
  if (req.method === 'OPTIONS') {
    return new Response(null, { headers: corsHeaders });
  }

  try {
    const { 
      resumeContent, 
      format = 'txt',
      isGuest = false,
      includeWatermark = false 
    } = await req.json();

    if (!resumeContent) {
      throw new Error('Resume content is required');
    }

    console.log('Generating export, format:', format);

    let exportContent = '';
    let contentType = 'text/plain';
    let filename = `resume.${format}`;

    switch (format) {
      case 'txt':
        exportContent = generateTextResume(resumeContent, isGuest && includeWatermark);
        contentType = 'text/plain';
        break;
      
      case 'json':
        exportContent = JSON.stringify(resumeContent, null, 2);
        if (isGuest && includeWatermark) {
          exportContent += '\n\n/* Generated by PulpResume - Sign up for more features */';
        }
        contentType = 'application/json';
        filename = 'resume.json';
        break;
      
      default:
        throw new Error(`Unsupported format: ${format}`);
    }

    return new Response(JSON.stringify({
      success: true,
      content: exportContent,
      contentType,
      filename,
      size: new Blob([exportContent]).size
    }), {
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });

  } catch (error) {
    console.error('Error in generate-export function:', error);
    return new Response(JSON.stringify({ 
      error: error.message,
      success: false 
    }), {
      status: 500,
      headers: { ...corsHeaders, 'Content-Type': 'application/json' },
    });
  }
});

function generateTextResume(content: any, includeWatermark: boolean): string {
  let resume = '';

  // Header
  if (content.profile) {
    const profile = content.profile;
    resume += `${profile.name || 'Your Name'}\n`;
    if (profile.email) resume += `Email: ${profile.email}\n`;
    if (profile.phone) resume += `Phone: ${profile.phone}\n`;
    if (profile.location) resume += `Location: ${profile.location}\n`;
    resume += '\n';
    
    if (profile.summary) {
      resume += `SUMMARY\n${'='.repeat(60)}\n${profile.summary}\n\n`;
    }
  }

  // Experience
  if (content.experience && content.experience.length > 0) {
    resume += `EXPERIENCE\n${'='.repeat(60)}\n`;
    content.experience.forEach((exp: any) => {
      resume += `${exp.title || 'Position'} at ${exp.company || 'Company'}\n`;
      resume += `${exp.startDate || 'Start'} - ${exp.endDate || 'End'}`;
      if (exp.location) resume += ` | ${exp.location}`;
      resume += '\n';
      
      if (exp.bullets && exp.bullets.length > 0) {
        exp.bullets.forEach((bullet: string) => {
          resume += `• ${bullet}\n`;
        });
      }
      resume += '\n';
    });
  }

  // Projects
  if (content.projects && content.projects.length > 0) {
    resume += `PROJECTS\n${'='.repeat(60)}\n`;
    content.projects.forEach((project: any) => {
      resume += `${project.name || 'Project Name'}\n`;
      if (project.description) resume += `${project.description}\n`;
      
      if (project.technologies && project.technologies.length > 0) {
        resume += `Technologies: ${project.technologies.join(', ')}\n`;
      }
      
      if (project.bullets && project.bullets.length > 0) {
        project.bullets.forEach((bullet: string) => {
          resume += `• ${bullet}\n`;
        });
      }
      resume += '\n';
    });
  }

  // Education
  if (content.education && content.education.length > 0) {
    resume += `EDUCATION\n${'='.repeat(60)}\n`;
    content.education.forEach((edu: any) => {
      resume += `${edu.degree || 'Degree'} in ${edu.field || 'Field'}\n`;
      resume += `${edu.institution || 'Institution'}`;
      if (edu.graduationDate) resume += ` | ${edu.graduationDate}`;
      if (edu.gpa) resume += ` | GPA: ${edu.gpa}`;
      resume += '\n\n';
    });
  }

  // Skills
  if (content.skills && content.skills.length > 0) {
    resume += `SKILLS\n${'='.repeat(60)}\n`;
    resume += content.skills.join(' • ') + '\n\n';
  }

  // Watermark for guests
  if (includeWatermark) {
    resume += '\n' + '='.repeat(60) + '\n';
    resume += 'Generated by PulpResume - AI-Powered Resume Tailoring\n';
    resume += 'Sign up at PulpResume.com for advanced features\n';
    resume += '='.repeat(60);
  }

  return resume;
}